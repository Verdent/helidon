security:
  providers:
    - abac:

client:
  event-loop: #DONE
    name-prefix: client-thread- #DONE
    workers: 1 #DONE
  connect-timeout-millis: 2000 #DONE
  read-timeout-millis: 2000 #DONE
  follow-redirects: true #DONE
  max-redirects: 5 #DONE
  user-agent: "Helidon"
  cookies: #DONE
    automatic-store-enabled: true #DONE
    default-cookies: #DONE
      - name: "env" #DONE
        value: "dev" #DONE
  headers: #DONE
    - name: "Accept" #DONE
      value: ["application/json","text/plain"] #DONE
  services:
    exclude: ["io.helidon.webclient.DefaultServiceRegistry"]
    config:
      # type of service
      service-registry: #Ne do jednicky
        # name is optional - only needed if more than one implementation exists
        # and we need different configuration options for each
        # this also supports running the same implementation twice with different config}
        - name: "@default"
          mapping:
            # any number of maps of protocol, host and port to another value
            - source: "http:#localhost:8080/greet"
              target: "http:#localhost:8081/jinejGreet"
      metrics:
      tracing:
#  proxy:
#    use-system-selector: false #DONE
#    host: "change.this.value" #DONE
#    port: 80 #DONE
#    no-proxy: ["localhost:8080", ".helidon.io", "www.oracle.com", "192.168.1.1"] #DONE
  ssl:
    server:
      # service loader based to prevent reflection
      disable-hostname-verification: false #DONE
      trust-all: false #DONE
      truststore:
        location:
          # or path:
          # or url:
          # or content: (base64)
          #Pouzit KeyConfig. SSL context
          classpath: "trustore.jks"
        password: "heslo"
        type: "PKCS12"
    client:
      # ClientAuth
      client-auth: "OPTIONAL" #DONE
      # use same as security - based on targets
      # key store pro private key
      keystore:
        location:
          # TODO requires change in the Resource class
          # or path:
          # or url:
          # or content: (base64)
          classpath: "something.jks"
        password: "heslo"
        type: "JKS"
  targets:
    - name: "greet" #pouze jmeno a neni to identifikator endpointu
      # only for https
      transports: ["https"] #pokud je protocol https
      hosts: ["localhost"] #a pokud je host localhost
      paths: ["/greet"] # a cesta je greet
      read-timeout-millis: 4000 #tak nastav read.... na 4k
      ssl:
        hostname-verifier: "@none" # a hostname ver na none
      services:
        metrics:
          enabled: false
        service-registry:
          - name: "@default"
            mapping:
              # any number of maps of protocol, host and port to another value
              - source: "http:#localhost:8080/greet"
                target: "http:#localhost:8081/jinejGreet:D"
